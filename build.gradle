plugins {
    id 'java'
    id 'eclipse'
    id 'org.jetbrains.gradle.plugin.idea-ext' version '1.1.8'
    id("com.github.johnrengelman.shadow").version("7.1.2")
}

group = 'foxo.flanty'
version = '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name 'codemc'
        url 'https://repo.codemc.io/repository/maven-public/'
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "BeDataDriven"
        url = "https://nexus.bedatadriven.com/content/groups/public/"
    }
}

dependencies {
    compileOnly 'net.skinsrestorer:skinsrestorer-api:15.5.2' // skin restorer
    implementation 'org.json:json:20250107' // json
    implementation("io.javalin:javalin:6.4.0") // javalin - endpoint framework
    compileOnly "com.velocitypowered:velocity-api:3.4.0-SNAPSHOT" // velocityMain
    annotationProcessor "com.velocitypowered:velocity-api:3.4.0-SNAPSHOT" // velocityAnnotations
    implementation 'com.squareup.okhttp3:okhttp:4.12.0' // http client
}

shadowJar {
    dependencies {
        exclude(dependency("org.slf4j:slf4j-api"))
    }
    getArchiveClassifier().set("")
}

def targetJavaVersion = 21
java {
    toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(targetJavaVersion)
}

def templateSource = file('src/main/templates')
def templateDest = layout.buildDirectory.dir('generated/sources/templates')
def generateTemplates = tasks.register('generateTemplates', Copy) { task ->
    def props = ['version': project.version]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

sourceSets.main.java.srcDir(generateTemplates.map { it.outputs })

project.idea.project.settings.taskTriggers.afterSync generateTemplates
project.eclipse.synchronizationTasks(generateTemplates)
